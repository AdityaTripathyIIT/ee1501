$date
	Wed May  7 18:40:24 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ms
$end
$scope module digital_clock_tb $end
$var wire 1 ! is_pm $end
$var wire 8 " timer_sec [7:0] $end
$var wire 1 # timer_running $end
$var wire 8 $ timer_min [7:0] $end
$var wire 1 % timer_buzzer $end
$var wire 8 & display_sec [7:0] $end
$var wire 8 ' display_min [7:0] $end
$var wire 8 ( display_hour [7:0] $end
$var wire 16 ) current_year [15:0] $end
$var wire 8 * current_month [7:0] $end
$var wire 8 + current_day [7:0] $end
$var wire 8 , current_24_sec [7:0] $end
$var wire 8 - current_24_min [7:0] $end
$var wire 8 . current_24_hour [7:0] $end
$var wire 1 / alarm_buzzer $end
$var reg 8 0 alarm_input_hour [7:0] $end
$var reg 8 1 alarm_input_min [7:0] $end
$var reg 8 2 alarm_input_sec [7:0] $end
$var reg 16 3 am_pm_indicator [15:0] $end
$var reg 1 4 clk $end
$var reg 1 5 hour_format $end
$var reg 8 6 input_day [7:0] $end
$var reg 8 7 input_hour [7:0] $end
$var reg 8 8 input_min [7:0] $end
$var reg 8 9 input_month [7:0] $end
$var reg 8 : input_sec [7:0] $end
$var reg 16 ; input_year [15:0] $end
$var reg 1 < reset $end
$var reg 1 = set_alarm $end
$var reg 1 > set_date $end
$var reg 1 ? set_time $end
$var reg 1 @ set_timer $end
$var reg 1 A snooze_alarm $end
$var reg 1 B start_timer $end
$var reg 1 C stop_alarm $end
$var reg 1 D stop_timer $end
$var reg 8 E timer_input_min [7:0] $end
$var reg 8 F timer_input_sec [7:0] $end
$scope module dut $end
$var wire 8 G alarm_input_hour [7:0] $end
$var wire 8 H alarm_input_min [7:0] $end
$var wire 8 I alarm_input_sec [7:0] $end
$var wire 1 4 clk $end
$var wire 1 5 hour_format $end
$var wire 8 J input_day [7:0] $end
$var wire 8 K input_hour [7:0] $end
$var wire 8 L input_min [7:0] $end
$var wire 8 M input_month [7:0] $end
$var wire 8 N input_sec [7:0] $end
$var wire 16 O input_year [15:0] $end
$var wire 1 < reset $end
$var wire 1 = set_alarm $end
$var wire 1 > set_date $end
$var wire 1 ? set_time $end
$var wire 1 @ set_timer $end
$var wire 1 A snooze_alarm $end
$var wire 1 B start_timer $end
$var wire 1 C stop_alarm $end
$var wire 1 D stop_timer $end
$var wire 8 P timer_input_min [7:0] $end
$var wire 8 Q timer_input_sec [7:0] $end
$var wire 8 R timer_sec [7:0] $end
$var wire 1 # timer_running $end
$var wire 8 S timer_min [7:0] $end
$var wire 1 % timer_buzzer $end
$var wire 1 T is_pm $end
$var wire 8 U display_sec [7:0] $end
$var wire 8 V display_min [7:0] $end
$var wire 8 W display_hour [7:0] $end
$var wire 16 X current_year [15:0] $end
$var wire 8 Y current_month [7:0] $end
$var wire 8 Z current_day [7:0] $end
$var wire 8 [ current_24_sec [7:0] $end
$var wire 8 \ current_24_min [7:0] $end
$var wire 8 ] current_24_hour [7:0] $end
$var wire 1 / alarm_buzzer $end
$scope module alarm_module $end
$var wire 8 ^ alarm_input_hour [7:0] $end
$var wire 8 _ alarm_input_min [7:0] $end
$var wire 8 ` alarm_input_sec [7:0] $end
$var wire 1 4 clk $end
$var wire 1 = set_alarm $end
$var wire 1 A snooze_alarm $end
$var wire 1 C stop_alarm $end
$var wire 8 a current_24_sec [7:0] $end
$var wire 8 b current_24_min [7:0] $end
$var wire 8 c current_24_hour [7:0] $end
$var reg 1 / alarm_buzzer $end
$var reg 10 d counter [9:0] $end
$var reg 8 e input_hour_internal [7:0] $end
$var reg 8 f input_min_internal [7:0] $end
$var reg 8 g input_sec_internal [7:0] $end
$var reg 1 h is_buzzing $end
$var reg 1 i is_snoozed $end
$upscope $end
$scope module clock_module $end
$var wire 1 4 clk $end
$var wire 8 j input_hour [7:0] $end
$var wire 8 k input_min [7:0] $end
$var wire 8 l input_sec [7:0] $end
$var wire 1 < reset $end
$var wire 1 ? set_time $end
$var reg 8 m current_24_hour [7:0] $end
$var reg 8 n current_24_min [7:0] $end
$var reg 8 o current_24_sec [7:0] $end
$upscope $end
$scope module date_module $end
$var wire 1 4 clk $end
$var wire 8 p current_24_hour [7:0] $end
$var wire 8 q current_24_min [7:0] $end
$var wire 8 r current_24_sec [7:0] $end
$var wire 8 s input_day [7:0] $end
$var wire 8 t input_month [7:0] $end
$var wire 16 u input_year [15:0] $end
$var wire 1 < reset $end
$var wire 1 > set_date $end
$var reg 8 v current_day [7:0] $end
$var reg 8 w current_month [7:0] $end
$var reg 16 x current_year [15:0] $end
$var reg 8 y days_in_current_month [7:0] $end
$upscope $end
$scope module display_module $end
$var wire 1 4 clk $end
$var wire 8 z current_24_hour [7:0] $end
$var wire 8 { current_24_min [7:0] $end
$var wire 8 | current_24_sec [7:0] $end
$var wire 1 5 hour_format $end
$var wire 8 } timer_sec [7:0] $end
$var wire 1 # timer_running $end
$var wire 8 ~ timer_min [7:0] $end
$var reg 8 !" display_hour [7:0] $end
$var reg 8 "" display_min [7:0] $end
$var reg 8 #" display_sec [7:0] $end
$var reg 1 T is_pm $end
$upscope $end
$scope module timer_module $end
$var wire 1 4 clk $end
$var wire 8 $" input_min [7:0] $end
$var wire 8 %" input_sec [7:0] $end
$var wire 1 < reset $end
$var wire 1 @ set_timer $end
$var wire 1 B start_timer $end
$var wire 1 D stop_timer $end
$var reg 8 &" max_min [7:0] $end
$var reg 1 % timer_buzzer $end
$var reg 8 '" timer_min [7:0] $end
$var reg 1 # timer_running $end
$var reg 8 (" timer_sec [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 ("
b0 '"
b1010 &"
b0 %"
b0 $"
bx #"
bx ""
bx !"
b0 ~
b0 }
b0 |
b0 {
b0 z
bx y
b11111100100 x
b1 w
b1 v
b11111100100 u
b1 t
b1 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
xi
xh
bx g
bx f
bx e
bx d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b1 Z
b1 Y
b11111100100 X
bx W
bx V
bx U
xT
b0 S
b0 R
b0 Q
b0 P
b11111100100 O
b0 N
b1 M
b0 L
b0 K
b1 J
b0 I
b0 H
b0 G
b0 F
b0 E
0D
0C
0B
0A
0@
0?
0>
0=
1<
b11111100100 ;
b0 :
b1 9
b0 8
b0 7
b1 6
05
04
b10000000100000 3
b0 2
b0 1
b0 0
x/
b0 .
b0 -
b0 ,
b1 +
b1 *
b11111100100 )
bx (
bx '
bx &
0%
b0 $
0#
b0 "
z!
$end
#500
0T
b0 (
b0 W
b0 !"
b0 '
b0 V
b0 ""
b0 &
b0 U
b0 #"
0/
14
#1000
04
0<
#1500
b1 ,
b1 [
b1 a
b1 o
b1 r
b1 |
14
#2000
04
#2500
b1 &
b1 U
b1 #"
b10 ,
b10 [
b10 a
b10 o
b10 r
b10 |
14
#3000
04
#3500
b10 &
b10 U
b10 #"
b11 ,
b11 [
b11 a
b11 o
b11 r
b11 |
14
#4000
04
#4500
b11 &
b11 U
b11 #"
b100 ,
b100 [
b100 a
b100 o
b100 r
b100 |
14
#5000
04
#5500
b100 &
b100 U
b100 #"
b101 ,
b101 [
b101 a
b101 o
b101 r
b101 |
14
#6000
04
#6500
b101 &
b101 U
b101 #"
b110 ,
b110 [
b110 a
b110 o
b110 r
b110 |
14
#7000
04
#7500
b110 &
b110 U
b110 #"
b111 ,
b111 [
b111 a
b111 o
b111 r
b111 |
14
#8000
04
#8500
b111 &
b111 U
b111 #"
b1000 ,
b1000 [
b1000 a
b1000 o
b1000 r
b1000 |
14
#9000
04
#9500
b1000 &
b1000 U
b1000 #"
b1001 ,
b1001 [
b1001 a
b1001 o
b1001 r
b1001 |
14
#10000
04
#10500
b1001 &
b1001 U
b1001 #"
b1010 ,
b1010 [
b1010 a
b1010 o
b1010 r
b1010 |
14
#11000
04
#11500
b1010 &
b1010 U
b1010 #"
b1011 ,
b1011 [
b1011 a
b1011 o
b1011 r
b1011 |
14
#12000
04
b10111 7
b10111 K
b10111 j
b111011 8
b111011 L
b111011 k
b111001 :
b111001 N
b111001 l
1?
#12500
b1011 &
b1011 U
b1011 #"
b10111 .
b10111 ]
b10111 c
b10111 m
b10111 p
b10111 z
b111011 -
b111011 \
b111011 b
b111011 n
b111011 q
b111011 {
b111001 ,
b111001 [
b111001 a
b111001 o
b111001 r
b111001 |
14
#13000
04
0?
#13500
b10111 (
b10111 W
b10111 !"
b111011 '
b111011 V
b111011 ""
b111001 &
b111001 U
b111001 #"
b111010 ,
b111010 [
b111010 a
b111010 o
b111010 r
b111010 |
14
#14000
04
#14500
b111010 &
b111010 U
b111010 #"
b111011 ,
b111011 [
b111011 a
b111011 o
b111011 r
b111011 |
14
#15000
04
#15500
b111011 &
b111011 U
b111011 #"
b0 .
b0 ]
b0 c
b0 m
b0 p
b0 z
b0 -
b0 \
b0 b
b0 n
b0 q
b0 {
b0 ,
b0 [
b0 a
b0 o
b0 r
b0 |
b10 +
b10 Z
b10 v
b11111 y
14
#16000
04
b11111101001 ;
b11111101001 O
b11111101001 u
b1100 9
b1100 M
b1100 t
b11111 6
b11111 J
b11111 s
1>
#16500
b0 (
b0 W
b0 !"
b0 '
b0 V
b0 ""
b0 &
b0 U
b0 #"
b11111101001 )
b11111101001 X
b11111101001 x
b1100 *
b1100 Y
b1100 w
b11111 +
b11111 Z
b11111 v
b1 ,
b1 [
b1 a
b1 o
b1 r
b1 |
14
#17000
04
1=
0>
#17500
b0 d
0h
0i
b0 e
b0 f
b0 g
b1 &
b1 U
b1 #"
b10 ,
b10 [
b10 a
b10 o
b10 r
b10 |
14
#18000
04
b111 2
b111 I
b111 `
#18500
b10 &
b10 U
b10 #"
b111 g
b11 ,
b11 [
b11 a
b11 o
b11 r
b11 |
14
#19000
04
0=
#19500
b11 &
b11 U
b11 #"
b100 ,
b100 [
b100 a
b100 o
b100 r
b100 |
14
#20000
04
#20500
b100 &
b100 U
b100 #"
b101 ,
b101 [
b101 a
b101 o
b101 r
b101 |
14
#21000
04
#21500
b101 &
b101 U
b101 #"
b110 ,
b110 [
b110 a
b110 o
b110 r
b110 |
14
#22000
04
#22500
b110 &
b110 U
b110 #"
b111 ,
b111 [
b111 a
b111 o
b111 r
b111 |
14
#23000
04
#23500
1/
1h
b111 &
b111 U
b111 #"
b1000 ,
b1000 [
b1000 a
b1000 o
b1000 r
b1000 |
14
#24000
04
1A
#24500
b1000 &
b1000 U
b1000 #"
0h
0/
1i
b1001 ,
b1001 [
b1001 a
b1001 o
b1001 r
b1001 |
14
#25000
04
0A
#25500
b1 d
b1001 &
b1001 U
b1001 #"
b1010 ,
b1010 [
b1010 a
b1010 o
b1010 r
b1010 |
14
#26000
04
#26500
b1010 &
b1010 U
b1010 #"
b10 d
b1011 ,
b1011 [
b1011 a
b1011 o
b1011 r
b1011 |
14
#27000
04
#27500
b11 d
b1011 &
b1011 U
b1011 #"
b1100 ,
b1100 [
b1100 a
b1100 o
b1100 r
b1100 |
14
#28000
04
#28500
b1100 &
b1100 U
b1100 #"
b100 d
b1101 ,
b1101 [
b1101 a
b1101 o
b1101 r
b1101 |
14
#29000
04
#29500
b101 d
b1101 &
b1101 U
b1101 #"
b1110 ,
b1110 [
b1110 a
b1110 o
b1110 r
b1110 |
14
#30000
04
#30500
b1110 &
b1110 U
b1110 #"
1h
1/
0i
b0 d
b1111 ,
b1111 [
b1111 a
b1111 o
b1111 r
b1111 |
14
#31000
04
#31500
b1111 &
b1111 U
b1111 #"
b10000 ,
b10000 [
b10000 a
b10000 o
b10000 r
b10000 |
14
#32000
04
1C
#32500
b10000 &
b10000 U
b10000 #"
0/
0h
b10001 ,
b10001 [
b10001 a
b10001 o
b10001 r
b10001 |
14
#33000
04
0C
#33500
b10001 &
b10001 U
b10001 #"
b10010 ,
b10010 [
b10010 a
b10010 o
b10010 r
b10010 |
14
#34000
04
b1010 F
b1010 Q
b1010 %"
1@
#34500
b10010 &
b10010 U
b10010 #"
b1010 "
b1010 R
b1010 }
b1010 ("
b10011 ,
b10011 [
b10011 a
b10011 o
b10011 r
b10011 |
14
#35000
04
0@
#35500
b10011 &
b10011 U
b10011 #"
b10100 ,
b10100 [
b10100 a
b10100 o
b10100 r
b10100 |
14
#36000
04
1B
#36500
b10100 &
b10100 U
b10100 #"
1#
b10101 ,
b10101 [
b10101 a
b10101 o
b10101 r
b10101 |
14
#37000
04
#37500
b1010 &
b1010 U
b1010 #"
b10110 ,
b10110 [
b10110 a
b10110 o
b10110 r
b10110 |
b1001 "
b1001 R
b1001 }
b1001 ("
14
#38000
04
#38500
b1001 &
b1001 U
b1001 #"
b1000 "
b1000 R
b1000 }
b1000 ("
b10111 ,
b10111 [
b10111 a
b10111 o
b10111 r
b10111 |
14
#39000
04
#39500
b1000 &
b1000 U
b1000 #"
b11000 ,
b11000 [
b11000 a
b11000 o
b11000 r
b11000 |
b111 "
b111 R
b111 }
b111 ("
14
#40000
04
#40500
b111 &
b111 U
b111 #"
b110 "
b110 R
b110 }
b110 ("
b11001 ,
b11001 [
b11001 a
b11001 o
b11001 r
b11001 |
14
#41000
04
#41500
b110 &
b110 U
b110 #"
b11010 ,
b11010 [
b11010 a
b11010 o
b11010 r
b11010 |
b101 "
b101 R
b101 }
b101 ("
14
#42000
04
#42500
b101 &
b101 U
b101 #"
b100 "
b100 R
b100 }
b100 ("
b11011 ,
b11011 [
b11011 a
b11011 o
b11011 r
b11011 |
14
#43000
04
#43500
b100 &
b100 U
b100 #"
b11100 ,
b11100 [
b11100 a
b11100 o
b11100 r
b11100 |
b11 "
b11 R
b11 }
b11 ("
14
#44000
04
#44500
b11 &
b11 U
b11 #"
b10 "
b10 R
b10 }
b10 ("
b11101 ,
b11101 [
b11101 a
b11101 o
b11101 r
b11101 |
14
#45000
04
#45500
b10 &
b10 U
b10 #"
b11110 ,
b11110 [
b11110 a
b11110 o
b11110 r
b11110 |
b1 "
b1 R
b1 }
b1 ("
14
#46000
04
#46500
b1 &
b1 U
b1 #"
b0 "
b0 R
b0 }
b0 ("
b11111 ,
b11111 [
b11111 a
b11111 o
b11111 r
b11111 |
14
#47000
04
#47500
b0 &
b0 U
b0 #"
b100000 ,
b100000 [
b100000 a
b100000 o
b100000 r
b100000 |
1%
0#
14
#48000
04
0B
#48500
b100000 &
b100000 U
b100000 #"
b100001 ,
b100001 [
b100001 a
b100001 o
b100001 r
b100001 |
14
#49000
04
1D
#49500
b100001 &
b100001 U
b100001 #"
b100010 ,
b100010 [
b100010 a
b100010 o
b100010 r
b100010 |
0%
14
#50000
04
0D
#50500
b100010 &
b100010 U
b100010 #"
b100011 ,
b100011 [
b100011 a
b100011 o
b100011 r
b100011 |
14
#51000
04
b111010 :
b111010 N
b111010 l
1?
#51500
b100011 &
b100011 U
b100011 #"
b10111 .
b10111 ]
b10111 c
b10111 m
b10111 p
b10111 z
b111011 -
b111011 \
b111011 b
b111011 n
b111011 q
b111011 {
b111010 ,
b111010 [
b111010 a
b111010 o
b111010 r
b111010 |
14
#52000
04
0?
#52500
b10111 (
b10111 W
b10111 !"
b111011 '
b111011 V
b111011 ""
b111010 &
b111010 U
b111010 #"
b111011 ,
b111011 [
b111011 a
b111011 o
b111011 r
b111011 |
14
#53000
04
#53500
b111011 &
b111011 U
b111011 #"
b0 .
b0 ]
b0 c
b0 m
b0 p
b0 z
b0 -
b0 \
b0 b
b0 n
b0 q
b0 {
b0 ,
b0 [
b0 a
b0 o
b0 r
b0 |
b11111101010 )
b11111101010 X
b11111101010 x
b1 *
b1 Y
b1 w
b1 +
b1 Z
b1 v
14
#54000
04
#54500
b0 (
b0 W
b0 !"
b0 '
b0 V
b0 ""
b0 &
b0 U
b0 #"
b1 ,
b1 [
b1 a
b1 o
b1 r
b1 |
14
#55000
04
#55500
b1 &
b1 U
b1 #"
b10 ,
b10 [
b10 a
b10 o
b10 r
b10 |
14
#56000
04
#56500
b10 &
b10 U
b10 #"
b11 ,
b11 [
b11 a
b11 o
b11 r
b11 |
14
#57000
b100000101001101 3
04
15
#57500
b1100 (
b1100 W
b1100 !"
b11 &
b11 U
b11 #"
b100 ,
b100 [
b100 a
b100 o
b100 r
b100 |
14
#58000
04
